///////////////////////////////////////////////////////////
//  Map.cs
//  Implementation of the Class Map
//  Generated by Enterprise Architect
//  Created on:      08-Jun-2016 18:24:49
//  Original author: Ralf Keller
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using Scenes;
using SpawnerClasses;
using WaveEngine.Common.Math;
using TiledSharp;
using WaveEngine.Framework;
using WaveEngine.Framework.Graphics;

namespace MapClasses {
	public class Map : BaseDecorator {

        public enum Difficulty
        {
            Jede = 0,
            Leicht = 1,
            Mittel = 2,
            Schwer = 3,

        }

		public GameScene gameScene;
        private TmxMap tmxMap;

        private Dictionary<int, List<Spawner>> difficultyToSpawnerList;

		public Map(TmxMap tmxMap) {
            this.tmxMap = tmxMap;

            difficultyToSpawnerList.Add(0, new List<Spawner>());
            difficultyToSpawnerList.Add(1, new List<Spawner>());
            difficultyToSpawnerList.Add(2, new List<Spawner>());

            foreach (TmxObjectGroup objectGroup in tmxMap.ObjectGroups)
            {
                if(objectGroup.Name == "Spawner")
                {
                    foreach (TmxObject tmxObject in objectGroup.Objects)
                    {
                        bool inEasy;
                        bool inMedium;
                        bool inHard;

                        string inEasyString = "false";
                        string inMediumString = "false";
                        string inHardString = "false";

                        tmxObject.Properties.TryGetValue("inEasy", out inEasyString);
                        tmxObject.Properties.TryGetValue("inMedium", out inMediumString);
                        tmxObject.Properties.TryGetValue("inHard", out inHardString);

                        inEasy      = Convert.ToBoolean(inEasyString);
                        inMedium    = Convert.ToBoolean(inMediumString);
                        inHard      = Convert.ToBoolean(inHardString);

                       
                    }
                }
            }
		}

		/// <param name="schwierigkeit">schwierigkeit</param>
		public List<Spawner> getSpawner(int schwierigkeit){
            return null;
		}

		/// 
		/// <param name="rectangle">rectangle</param>
		public bool requestMovement(Transform2D transform){

			return false;
		}

	}//end Map

}//end namespace Map