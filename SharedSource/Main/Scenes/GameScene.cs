///////////////////////////////////////////////////////////
//  GameScene.cs
//  Implementation of the Class GameScene
//  Generated by Enterprise Architect
//  Created on:      08-Jun-2016 18:24:49
//  Original author: Ralf
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using Components;
using Entitys;
using MapClasses;
using WaveEngine.Framework;
using WaveEngine.Framework.Graphics;
using WaveEngine.Components.Cameras;
using WaveEngine.Framework.Physics2D;

namespace Scenes {
	public class GameScene : Scene {

		public GameSceneBehaviour gameSceneBehaviour { get; private set; }
        public List<GameObject> gameObjects { get; private set; }
        private Map map;
        private Player player;


		public GameScene(){

		}

		/// <param name="map">Die Map, die für diese Scene verwendet werden soll</param>
		/// <param name="player">Der Player, der für diese Scene verwendet werden soll</param>
		public GameScene(Map map, Player player){
            this.map = map;
            this.player = player;

            gameSceneBehaviour = new GameSceneBehaviour();

            //Noch nicht sicher, ob "PostUpdate" oder "PreUpdate" besser für uns ist
            AddSceneBehavior(gameSceneBehaviour, SceneBehavior.Order.PostUpdate);

            gameObjects = new List<GameObject>();

		}

        protected override void CreateScene()
        {
            //throw new NotImplementedException();
            EntityManager.Add(new FixedCamera2D("Camera"));

            EntityManager.Add(map);
            EntityManager.Add(player);
        }

        public bool isFree(Collider2D collider)
        {
            if (map.requestMovement(collider.Transform2D) == false)
                return false;
            foreach (GameObject gameObject in gameObjects)
            {
                if (collider.Intersects(gameObject.collider))
                    return false;
            }

            return true;
        }

    }//end GameScene

}//end namespace Scenes