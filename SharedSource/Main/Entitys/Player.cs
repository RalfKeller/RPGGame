///////////////////////////////////////////////////////////
//  Player.cs
//  Implementation of the Class Player
//  Generated by Enterprise Architect
//  Created on:      08-Jun-2016 18:24:51
//  Original author: Ralf Keller
///////////////////////////////////////////////////////////

using ToBeDecided;
using ToBeDecided.Components;
using ToBeDecided.Components.Behaviours;
using ToBeDecided.Entitys;
using ToBeDecided.Scenes;
using WaveEngine.Components.Animation;
using WaveEngine.Components.Graphics2D;
using WaveEngine.Framework;
using WaveEngine.Framework.Graphics;
using WaveEngine.Framework.Physics2D;

namespace Entitys
{
    public class Player : GameObject {

		public PlayerBehaviourComponent playerBehaviourComponent { get; private set; }

        public Player(GameScene scene) {
            playerBehaviourComponent = new PlayerBehaviourComponent(scene);
            this.collider = new RectangleCollider2D();
            this.stats = StatComponent.PlayerLevel1;
            this.transform = new Transform2D() { X = 50, Y = 50, DrawOrder = 0 };

            Entity = new Entity("Player")
                .AddComponent(transform)
                .AddComponent(new SpriteAtlas(WaveContent.Assets.SpriteSheet_spritesheet))
                .AddComponent(new SpriteAtlasRenderer())
                .AddComponent(new Animation2D())
                .AddComponent(collider)
                .AddComponent(playerBehaviourComponent)
                .AddComponent(stats);
		}

	}//end Player

}//end namespace Entitys